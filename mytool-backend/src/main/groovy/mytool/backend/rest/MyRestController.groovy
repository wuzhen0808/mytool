package mytool.backend.rest

import groovy.transform.CompileStatic
import mytool.backend.service.ConfigService
import mytool.backend.service.CorpListService
import mytool.backend.service.TaskService
import mytool.collector.XueqiuDataWasher
import mytool.collector.xueqiu.v5.XQV5DataCollector
import mytool.collector.xueqiu.v5.XQV5DataWasher
import org.springframework.beans.factory.annotation.Autowired
import org.springframework.web.bind.annotation.GetMapping

/*
 * This Groovy source file was generated by the Gradle 'init' task.
 */

import org.springframework.web.bind.annotation.RestController

import java.nio.charset.Charset

@RestController
@CompileStatic
class MyRestController {

    @Autowired
    CorpListService corpListService

    @Autowired
    TaskService taskService

    @Autowired
    ConfigService configService

    @GetMapping("corpList")
    List<String> corpList() {
        return corpListService.corpList()
    }

    @GetMapping("taskInfos")
    List<TaskService.TaskInfo> taskInfoList() {
        return taskService.taskInfoList()
    }

    @GetMapping("cancel")
    boolean cancel(String id) {
        return taskService.cancel(id)
    }

    @GetMapping("collect")
    TaskService.TaskInfo collect() {
        File folder = configService.getDataFolder("xueqiuv5", "raw")
        XQV5DataCollector dc = new XQV5DataCollector(folder)
        dc.cookie(configService.getXueQiuToken())
        dc.types(XQV5DataCollector.balance, XQV5DataCollector.income, XQV5DataCollector.cash_flow)
        dc.pauseInterval(1 * 1000)
        List<String> corpCodeL = this.corpListService.corpList()
        dc.corpCodes(corpCodeL)
        return taskService.addTask("collect", dc)

    }

    @GetMapping("wash")
    TaskService.TaskInfo wash() {
        File folder = configService.getDataFolder("xueqiuv5", "raw")
        File folder2 = configService.getDataFolder("xueqiuv5", "washed")
        XQV5DataWasher w = new XQV5DataWasher(folder, Charset.forName("UTF-8"), folder2);
        w.types(XQV5DataCollector.balance, XQV5DataCollector.income, XQV5DataCollector.cash_flow)

        return taskService.addTask("wash", w)
    }

}
